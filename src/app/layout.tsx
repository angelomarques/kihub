import { Logo } from "@/assets/logo";
import { Button, buttonVariants } from "@/components/ui/button";
import { UserAvatar } from "@/components/user-avatar";
import { getAuthenticatedUser } from "@/server/users/queries";
import {
  HomeIcon as HomeSolidIcon,
  UserIcon as UserSolidIcon,
} from "@heroicons/react/20/solid";
import {
  ArrowRightEndOnRectangleIcon,
  HomeIcon,
  PencilSquareIcon,
  UserIcon,
} from "@heroicons/react/24/outline";
import {
  getKindeServerSession,
  LoginLink,
  LogoutLink,
} from "@kinde-oss/kinde-auth-nextjs/server";
import clsx from "clsx";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import Link from "next/link";
import { MobileSidebar } from "./_components/mobile-sidebar";
import { NavLink } from "./_components/nav-link";
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={clsx(inter.className, "dark")}>
        <div className="flex items-center justify-center">
          <div className="grid h-screen flex-1 grid-cols-1 sm:flex-initial sm:grid-cols-[120px,minmax(200px,600px),120px] lg:grid-cols-[320px,minmax(200px,600px),320px]">
            <Sidebar />

            <div className="w-full">
              <Header />
              {children}
            </div>

            <div className="hidden sm:block"></div>
          </div>
        </div>
      </body>
    </html>
  );
}

async function Header() {
  const { isAuthenticated: getAuthenticaticationState } =
    getKindeServerSession();

  const isAuthenticated = await getAuthenticaticationState();

  return (
    <header className="flex items-center justify-center p-4 sm:hidden">
      <MobileSidebar>
        {isAuthenticated ? (
          <UserInfo />
        ) : (
          <LoginLink
            className={buttonVariants({ className: "mx-3 my-4 w-5/6" })}
          >
            Log in
          </LoginLink>
        )}
      </MobileSidebar>

      <Link href="/" className="-ml-10 mr-auto">
        <Logo className="h-12 w-12" />
      </Link>
    </header>
  );
}

async function UserInfo() {
  const user = await getAuthenticatedUser();

  if (!user) {
    return null;
  }

  return (
    <div className="px-3 py-4">
      <UserAvatar picture={user.picture} username={user.username} />

      <Link
        href={`/${user.username}`}
        className="mt-1.5 block font-medium hover:underline"
      >
        {`${user.firstName} ${user.lastName}`}
      </Link>
      <p className="mt-1 text-sm text-zinc-400">@{user.username}</p>
    </div>
  );
}

async function Sidebar() {
  const user = await getAuthenticatedUser();

  if (!user) {
    return null;
  }

  return (
    <aside className="hidden h-full flex-col bg-zinc-950 py-8 pl-6 sm:flex">
      <Button variant="ghost" size="icon-lg" className="ml-4">
        <Logo className="h-10 w-10" />
      </Button>

      <nav className="mt-12">
        <ul>
          <li>
            <NavLink
              href="/"
              icon={<HomeIcon className="h-10 w-10" />}
              selectedIcon={<HomeSolidIcon className="h-10 w-10" />}
            >
              Home
            </NavLink>
          </li>

          <li>
            <NavLink
              href="/profile"
              icon={<UserIcon className="h-10 w-10" />}
              selectedIcon={<UserSolidIcon className="h-10 w-10" />}
            >
              Profile
            </NavLink>
          </li>

          <li>
            <LogoutLink className="flex w-fit items-center gap-5 rounded-xl px-5 py-3 text-lg hover:bg-zinc-600/20">
              <ArrowRightEndOnRectangleIcon className="h-10 w-10" />

              <span className="hidden lg:inline">Log out</span>
            </LogoutLink>
          </li>

          <li>
            <Link
              href="compose/post"
              className={buttonVariants({
                className: "mt-3 w-5/6 py-3",
              })}
            >
              <PencilSquareIcon className="h-8 w-8 lg:hidden" />
              <span className="hidden lg:inline">Post</span>
            </Link>
          </li>
        </ul>
      </nav>

      <div className="mt-auto flex items-center gap-2">
        <UserAvatar picture={user.picture} username={user.username} />
        <div className="hidden lg:block">
          <Link
            href={`/${user.username}`}
            className="mt-1.5 block font-medium hover:underline"
          >
            {`${user.firstName} ${user.lastName}`}
          </Link>
          <p className="mt-1 text-sm text-zinc-400">@{user.username}</p>
        </div>
      </div>
    </aside>
  );
}
