import { Logo } from "@/assets/logo";
import { buttonVariants } from "@/components/ui/button";
import { getUserByKindeId } from "@/server/users/queries";
import { UserIcon as UserSolidIcon } from "@heroicons/react/20/solid";
import {
  getKindeServerSession,
  LoginLink,
} from "@kinde-oss/kinde-auth-nextjs/server";
import clsx from "clsx";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import Image from "next/image";
import Link from "next/link";
import { MobileSidebar } from "./_components/mobile-sidebar";
import { Sidebar } from "./_components/sidebar";
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={clsx(inter.className, "dark")}>
        <div className="flex items-center justify-center">
          <div className="grid h-screen flex-1 grid-cols-1 sm:flex-initial sm:grid-cols-[120px,minmax(200px,600px),120px] lg:grid-cols-[320px,minmax(200px,600px),320px]">
            <Sidebar />

            <div className="w-full">
              <Header />
              {children}
            </div>

            <div className="hidden sm:block"></div>
          </div>
        </div>
      </body>
    </html>
  );
}

async function Header() {
  const { isAuthenticated: getAuthenticaticationState } =
    getKindeServerSession();

  const isAuthenticated = await getAuthenticaticationState();

  return (
    <header className="flex items-center justify-center p-4 sm:hidden">
      <MobileSidebar>
        {isAuthenticated ? (
          <UserInfo />
        ) : (
          <LoginLink
            className={buttonVariants({ className: "mx-3 my-4 w-5/6" })}
          >
            Log in
          </LoginLink>
        )}
      </MobileSidebar>

      <Link href="/" className="-ml-10 mr-auto">
        <Logo className="h-12 w-12" />
      </Link>
    </header>
  );
}

async function UserInfo() {
  const { getUser } = getKindeServerSession();

  const kindeUser = await getUser();

  if (!kindeUser) return null;

  const user = await getUserByKindeId(kindeUser.id);

  if (!user) {
    return null;
  }

  return (
    <div className="px-3 py-4">
      {user.picture ? (
        <Image
          src={user.picture}
          alt={user.username}
          width={40}
          height={40}
          className="rounded-full object-contain"
        />
      ) : (
        <UserSolidIcon className="h-10 w-10" />
      )}

      <Link
        href={`/${user.username}`}
        className="mt-1.5 block font-medium hover:underline"
      >
        {`${user.firstName} ${user.lastName}`}
      </Link>
      <p className="mt-1 text-sm text-zinc-400">@{user.username}</p>
    </div>
  );
}
